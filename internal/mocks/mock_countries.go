// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/harijar/geogame/internal/repo (interfaces: Countries)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/mock_countries.go -package=mocks . Countries
//
// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	countries "github.com/harijar/geogame/internal/repo/countries"
	gomock "go.uber.org/mock/gomock"
)

// MockCountries is a mock of Countries interface.
type MockCountries struct {
	ctrl     *gomock.Controller
	recorder *MockCountriesMockRecorder
}

// MockCountriesMockRecorder is the mock recorder for MockCountries.
type MockCountriesMockRecorder struct {
	mock *MockCountries
}

// NewMockCountries creates a new mock instance.
func NewMockCountries(ctrl *gomock.Controller) *MockCountries {
	mock := &MockCountries{ctrl: ctrl}
	mock.recorder = &MockCountriesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCountries) EXPECT() *MockCountriesMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockCountries) Get(arg0 int) *countries.Country {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*countries.Country)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockCountriesMockRecorder) Get(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCountries)(nil).Get), arg0)
}
