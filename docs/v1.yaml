openapi: 3.0.0
info:
  title: GeoGame V1 API
  version: 0.1.1
paths:
  /v1/game/start:
    post:
      summary: Start a new game
      description: If there is already a started game, it will be restarted. 
                   If we have information about last (or ongoing) game we should ensure that the new country is different from the previous one.
      responses:
        '200':
          description: First prompt
          content:
            application/json:
              schema:
                type: object
                properties:
                  prompt:
                    type: string
                    description: first hint
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /v1/game/guess:
    post:
      summary: Guess the country
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                guess:
                  type: string
                  description: user's guess
      responses:
        '200':
          description: Guess check result
          content:
            application/json:
              schema:
                type: object
                properties:
                  right:
                    type: boolean
                    description: is the guess right
                  country:
                    type: string
                    nullable: true
                    description: present when the guess is right or tries limit is exceeded
                  prompt:
                    type: string
                    nullable: true
                    description: next prompt, present only if the guess is wrong and tries limit is not exceeded
        '404':
          description: Endpoint accessed without the game being started
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Unable to get previous prompts, missing form input or the country guessed by the game is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /v1/auth:
    get:
      summary: Check if user is authorized
      description: If user is authorized, there will be access to their profile and statistics.
                   If user is not authorized, there will be an 'Authorize with Telegram' button.
      responses:
        '200':
          description: user is authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  first_name:
                    type: string
                    nullable: true
                    description: user's first name
                  last_name:
                    type: string
                    nullable: true
                    description: user's last name
        '403':
          description: user is not authorized, e. g. playing as guest
          content:
            application/json:
              schema:
                type: object
                properties:
                  info:
                    type: string
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      summary: Authorize user with Telegram
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: user ID defined by Telegram
                first_name:
                  type: string
                  nullable: true
                  description: user's first name
                last_name:
                  type: string
                  nullable: true
                  description: user's last name
                username:
                  type: string
                  description: user's Telegram username
                photo_url:
                  type: string
                  nullable: true
                  description: link to user's Telegram profile picture
                auth_date:
                  type: integer
                  description: authorization date in Unix timestamp format
                hash:
                  type: string
                  description: hash string to prove that authorization data is going from Telegram
      responses:
        '200':
          description: user is successfully authorized
        '403':
          description: could not check sign, invalid authorization data
          content:
            applicaton/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: internal server error
          content:
            applicaton/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /v1/profile:
    get:
      summary: User profile
      description: Gets user profile information such as game statistics from server
      responses:
        '200':
          description: got all information successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: user's first name and last name joined with ' '
                  total_games:
                    type: integer
                    description: total number of games that user played
                  games_won:
                    type: integer
                    description: number of games that user won (successfully guessed the country)
                  average_guesses:
                    type: number
                    description: average number of guesses given to the user per game
        '404':
          description: user is not authorized, there is no data about them
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string